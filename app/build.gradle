plugins {
    id 'com.android.application'
    id 'org.jetbrains.kotlin.android'
    id 'com.google.dagger.hilt.android'
    id 'kotlin-kapt'
    id 'com.google.gms.google-services'
    id 'com.google.firebase.crashlytics'
    id "com.guardsquare.appsweep" version "latest.release"

}

android {
    namespace 'com.example.newshub'
    compileSdk 33

    defaultConfig {
        applicationId "com.example.newshub"
        minSdk 24
        targetSdk 33
        versionCode 1
        versionName "1.0"

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        vectorDrawables {
            useSupportLibrary true
        }
    }
    Properties localProperties = new Properties()
    localProperties.load(new FileInputStream(rootProject.file("local.properties")))
    defaultConfig {
        buildConfigField "String", "API_KEY", "\"${localProperties.getProperty("API_KEY")}\""
    }
    buildTypes {
        release {
            minifyEnabled true
            shrinkResources true
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        benchmark {
            signingConfig signingConfigs.debug
            matchingFallbacks = ['release']
            debuggable false
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = '1.8'
    }
    buildFeatures {
        compose true
    }
    composeOptions {
        kotlinCompilerExtensionVersion '1.2.0'
    }
    packagingOptions {
        resources {
            excludes += '/META-INF/{AL2.0,LGPL2.1}'
        }
    }
}

dependencies {

    implementation(SupportLib.CoreKtx)
    implementation(SupportLib.LifecycleRuntime)
    implementation(SupportLib.ActivityCompose)
    implementation(SupportLib.ComposeUi)
    implementation(SupportLib.ComposeUiToolingPreview)
    implementation(SupportLib.ComposeMaterial)
    implementation 'androidx.test.ext:junit-ktx:1.1.5'

    testImplementation(TestingLib.Junit)
    testImplementation(AndroidTestingLib.JunitExt)
    testImplementation(AndroidTestingLib.EspressoCore)
    testImplementation(AndroidTestingLib.ComposeTestJunit)
    androidTestImplementation 'junit:junit:4.12'
    debugImplementation(AndroidComposeDebugLib.ComposeUiTooling)
    debugImplementation(AndroidComposeDebugLib.UiTestManifest)
    implementation(platform("org.jetbrains.kotlin:kotlin-bom:1.8.0"))
    implementation(Remote.retrofit2_converter)

    implementation(Navigation.NavigationCompose)
    implementation("com.jakewharton.timber:timber:5.0.1")
    implementation(DI.Hilt)
    implementation(DI.Hilt_Navigation)
    kapt(DI.Hilt_Compiler)

    implementation project(Modules.Theme)
    implementation project(Modules.NAVIGATION)
    implementation project(Modules.ONBOARDING)
    implementation project(Modules.SPLASHSCREEN)
    implementation project(Modules.Home)
    implementation project(Modules.REMOTE)
    implementation project(Modules.FEED)
    implementation project(Modules.ARTICLE_DETAILS)
    implementation project(Modules.SOURCE_CONTENT)
    implementation project(Modules.MODEL)
    implementation project(Modules.COMMON)
    implementation project(Modules.DATABASE)
    implementation project(Modules.SEARCH)
    implementation project(Modules.SETTINGS)
    implementation(project(Modules.STORAGE))

    // Import the BoM for the Firebase platform
    implementation(platform(Firebase.firebasebom))

    // Add the dependencies for the Crashlytics and Analytics librariesk
    // When using the BoM, you don't specify versions in Firebase library dependencies
    implementation(Firebase.crashlytics)
    implementation(Firebase.analytics)

    implementation "androidx.profileinstaller:profileinstaller:1.3.0-alpha02"

    debugImplementation(LeakMemory.LeakCanary)

}